{"remainingRequest":"/Users/agnela/Projects/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/agnela/Projects/portfolio/src/components/Projects.vue?vue&type=template&id=9191b8d8&scoped=true","dependencies":[{"path":"/Users/agnela/Projects/portfolio/src/components/Projects.vue","mtime":1699298722919},{"path":"/Users/agnela/Projects/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1699299280692},{"path":"/Users/agnela/Projects/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1699299280692},{"path":"/Users/agnela/Projects/portfolio/node_modules/babel-loader/lib/index.js","mtime":1699299281808},{"path":"/Users/agnela/Projects/portfolio/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1699299281470},{"path":"/Users/agnela/Projects/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":1699299280692},{"path":"/Users/agnela/Projects/portfolio/node_modules/vue-loader/lib/index.js","mtime":1699299281346}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}